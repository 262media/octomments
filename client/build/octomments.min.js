!function(t,e){"object"==typeof exports&&"undefined"!=typeof module?module.exports=e():"function"==typeof define&&define.amd?define(e):(t=t||self).Octomments=e()}(this,function(){"use strict";function f(e){return["code","error","error_description","error_uri"].forEach(function(t){e=e.replace(new RegExp("[?&]".concat(t,"=[^&]+")),"")}),e}function R(t){var e=f(window.location.href),n=["client_id=".concat(t),"redirect_uri=".concat("".concat(encodeURI(e)))];return"https://github.com/login/oauth/authorize?".concat(n.join("&"))}var d="OCTOMMENTS_USER",O=!0===function(){var t="test";try{return localStorage.setItem(t,t),localStorage.removeItem(t),!0}catch(t){return!1}}()?localStorage:{setItem:function(){},getITem:function(){}};function l(t){if(!t)throw new Error("Octomments options required.");if(!t.endpoints||!t.endpoints.issue||!t.endpoints.token)throw new Error("`options.endpoints` are missing or incomplete.");if(!t.id)throw new Error("`options.id` is missing.");if(!t.githubClientId)throw new Error("`options.githubClientId` is missing.");function n(t){return s(l.USER_ERROR,t)}var o={user:null},r=t.endpoints,i=t.id,c=t.githubClientId,s=t.on||function(){},a=void 0===t.gotoComments||t.gotoComments,u=function(t){return s(l.COMMENTS_ERROR,t)};function E(t,e){t.json().then(function(t){t.issue.comments?s(e,t.issue.comments):u(new Error("Data is fetched successfully but it is in a wrong format"))}).catch(u)}return function(){s(l.LOADING_CURRENT_USER);var t=O.getItem(d),e=function(t,e){e=e||window.location.href,t=t.replace(/[\[\]]/g,"\\$&");var n=new RegExp("[?&]".concat(t,"(=([^&#]*)|&|#|$)")).exec(e);return n?n[2]?decodeURIComponent(n[2].replace(/\+/g," ")):"":null}("code");if(t)try{o.user=JSON.parse(t),s(l.USER_LOADED,o.user)}catch(t){console.error(t),n(R(c))}else e?fetch("".concat(r.token,"?code=").concat(e)).then(function(t,e){e||!t.ok?(history.replaceState({},document.title,f(location.href)),n(R(c))):t.json().then(function(t){history.replaceState({},document.title,"".concat(f(location.href)).concat(a?"#comments":"")),O.setItem(d,JSON.stringify(t)),s(l.USER_LOADED,t),o.user=t})}).catch(n):s(l.NO_CURRENT_USER,R(c))}(),s(l.LOADING_COMMENTS),fetch("".concat(r.issue,"?id=").concat(i)).then(function(t,e){var n,o;e?u(e):t.ok?E(t,l.COMMENTS_LOADED):404===t.status?(n=i,o=r.issue,console.log("Octomments: Here is a curl request to create the missing GitHub Issue. Make sure that you feel the empty fields:\n\ncurl --location --request POST '".concat(o,"' --header 'Content-Type: application/json' --data-raw '{\"id\": \"").concat(n,'", "title": "", "text": "", "secret": ""}\'\n\n')),s(l.NO_GITHUB_ISSUE_CREATED)):u(new Error("Problem getting issue's data"))}).catch(u),o.logout=function(){O.removeItem(d),location.reload()},o.add=function(t){if(!o.user)throw new Error("No user logged in.");var e;s(l.SAVING_COMMENT),e=t,fetch("".concat(r.issue),{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({comment:!0,body:e,token:o.user.token,id:i})}).then(function(t,e){e&&u(e),E(t,l.COMMENT_SAVED)}).catch(u)},o}return l.LOADING_COMMENTS="LOADING_COMMENTS",l.COMMENTS_LOADED="COMMENTS_LOADED",l.NO_GITHUB_ISSUE_CREATED="NO_GITHUB_ISSUE_CREATED",l.COMMENTS_ERROR="COMMENTS_ERROR",l.USER_ERROR="USER_ERROR",l.LOADING_CURRENT_USER="LOADING_CURRENT_USER",l.NO_CURRENT_USER="NO_CURRENT_USER",l.USER_LOADED="USER_LOADED",l.SAVING_COMMENT="SAVING_COMMENT",l.COMMENT_SAVED="COMMENT_SAVED",l});